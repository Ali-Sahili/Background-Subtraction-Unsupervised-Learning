#........ project configuration........

- BackgroundSubstraction
      |
      |-- Data
      |     |
      |     |-- MyInput
      |     	 |-- Varna dataset 
      |     		|-- video .mp4
      |     		|-- img # sequence of 83300 images in jpeg format 
      |     |-- MyOutput
      |     	 |-- Masks
      |     		|-- SUBSENSE
      |
      |-- Codes
      |     |-- First method
      |     	 |-- SUBSENSE
      |     		|-- Python
      |     			|-- Subsense.py  # main function to be executed changing the paths
      |     		|-- Subsense         # some modules written in c++
      |				
      |     		|-- CMakeLists.txt   # build the project before execute the python code
      |			|-- ReadMe # main instruction to test the program
      |
      |     |-- Second method
      |     	 |-- PBAS
      |     		|-- PBAS.py # python implementation change the path of the dataset only
      |     		|-- PBAS # c++ implementation change the path of the dataset only
      |			|-- ReadMe # main instruction to test the program in python or in c++ language
      |
      |     |-- Third method
      |     	 |-- LOBSTER
      |     		|-- Python
      |     			|-- Lobster.py  # main function to be executed changing the paths
      |     		|-- Lobster         # some modules written in c++
      |				
      |     		|-- CMakeLists.txt   # build the project before execute the python code
      |			|-- ReadMe # main instruction to test the program
      |
      |     |-- Fourth method
      |     	 |-- ViBe
      |     		|-- ViBe # c++ implementation of the algorithm, it takes a video as input.
      |				
      |			|-- ReadMe # main instruction to test the program
      |
      |     |-- Fifth method
      |     	 |-- PAWCS
      |     		|-- Python
      |     			|-- Pawcs.py  # main function to be executed changing the paths
      |     		|-- Pawcs         # some modules written in c++
      |				
      |     		|-- CMakeLists.txt   # build the project before execute the python code
      |			|-- ReadMe # main instruction to test the program
      |
      |     |-- Sixth method
      |     	 |-- LoopyBeliefPropagation
      |     		|-- pyugm         # main module contains all implementations of this algorithm
      |     		|-- setup.py         # must be excuted before running the code
      |     		|-- LBP.py   # Main code 
      |			|-- ReadMe # main instruction to test the program
      |
      |     |-- seventh method
      |     	 |-- 3PhaseForeGroundSegmentation
      |     		|-- 3PBMCode.o   # object code 
      |			|-- ReadMe       # main instruction to test the program
      |


[librairies]
opencv-3.3
g++
python 3.5
matplotlib
numpy


[Project]
name: Backgound substraction
input: rgb images jpeg format
output: binary images (Masks)
Background: 0
Foreground: 1

[paths]
dataset-path = 'Data/MyInput/varna_20190125_153327_0_900/img' # sequence of images - rgb jpeg format
dataset-name = 'varna_20190125_153327_0_900'
output-path = 'Data/MyOuput/'
buildFile-path =  # for subsense method and Lobster method, build file  



[parameters]
method-name = # for instant we have subsense, lobster and PBAS methods
saving-result = # boolean parameter: true or false
show-result = # boolean parameter: true or false








